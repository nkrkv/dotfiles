export PATH=/usr/local/bin:$PATH
export PATH=./node_modules/.bin:$PATH
export PATH=$HOME/bin:$HOME/.local/bin:$PATH
export PATH=$HOME/.gem/ruby/2.6.0/bin:$PATH
export PATH=$HOME/.yarn/bin:$PATH
#export PATH=/opt/homebrew/var/homebrew/linked
export EDITOR=nvim
export TERM="xterm-256color"
export FZF_DEFAULT_COMMAND='fd --type f --follow'
fpath+=("$(brew --prefix)/share/zsh/site-functions")

# Project env vars
export XOD_PRODUCTION_CONTEXT=gke_xodio-146312_us-central1-a_production
export XOD_STAGING_CONTEXT=gke_xodio-146312_us-central1-a_staging
export AMPERKA_RU_THEME_REVIEW=1023854
export AMPERKA_RU_THEME_PRODUCTION=1041717
export AMPERKA_COM_THEME_REVIEW=45725417530
export AMPERKA_COM_THEME_PRODUCTION=11524898874

e() {
    gnome-terminal --quiet -- nvim $@
}

o() {
    xdg-open $@ > /dev/null 2> /dev/null
}

DEFAULT_USER=nailxx
COMPLETION_WAITING_DOTS="true"

# Rehash autocompletion real-time
zstyle ":completion:*:commands" rehash 1

# Enable zmv
autoload -U zmv

# Antigen provided by `yay -Sy antigen-git`
#source /usr/share/zsh/share/antigen.zsh
source /opt/homebrew/Cellar/antigen/2.2.3/share/antigen/antigen.zsh

antigen use oh-my-zsh
antigen bundle git
antigen bundle git-extras
#antigen bundle docker
antigen bundle kubectl
antigen bundle yarn
antigen bundle systemd
antigen bundle clipboard
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions

export NVM_LAZY_LOAD=true
export NVM_AUTO_USE=true
antigen bundle lukechilds/zsh-nvm

antigen bundle davidparsson/zsh-pyenv-lazy

# Theme https://github.com/sindresorhus/pure
#antigen bundle mafredri/zsh-async
#antigen bundle sindresorhus/pure
export PURE_PROMPT_SYMBOL="$"
autoload -U promptinit; promptinit
# turn on git stash status
zstyle :prompt:pure:git:stash show yes
prompt pure

antigen apply

# Integrate FZF
#source /usr/share/fzf/key-bindings.zsh
#source /usr/share/fzf/completion.zsh

# This script was automatically generated by the broot program
# More information can be found in https://github.com/Canop/broot
# This function starts broot and executes the command
# it produces, if any.
# It's needed because some shell commands, like `cd`,
# have no useful effect if executed in a subshell.
function br {
    f=$(mktemp)
    (
        set +e
        broot --outcmd "$f" "$@"
        code=$?
        if [ "$code" != 0 ]; then
            rm -f "$f"
            exit "$code"
        fi
    )
    code=$?
    if [ "$code" != 0 ]; then
        return "$code"
    fi
    d=$(<"$f")
    rm -f "$f"
    eval "$d"
}
